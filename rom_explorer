#!/usr/bin/env ruby
# frozen_string_literal: true

# ROM explorer utility

$LOAD_PATH.unshift("#{File.dirname(__FILE__)}/lib")

require 'layoutable'
require 'irb'

def rom(filename)
  @data = File.binread(filename)
  @data.length.tap { |l| puts "Loaded #{l} bytes" }
end

def apply(layout)
  @rom = layout.apply_to(@data)
end

def cwd
  @cwd ||= []
end

alias pwd cwd

def cd(*args)
  args.each do |d|
    case d
    when '..' then @cwd.pop
    when '.' then @cwd
    when '/' then @cwd = []
    else @cwd << d
    end
  end
  item
end

def item
  !@cwd || @cwd.empty ? @rom : @rom.dig(*@cwd)
end

def dump(string, start: 0, finish: nil, length: 0x200, width: 16)
  finish ||= start + length - 1 if length

  unpack_format = 'H2' * width
  addr_format = "0x%0#{finish.to_s(16).length}x"

  (start..finish).step(width) do |offset|
    row = string.byteslice(offset, width)&.unpack(unpack_format)
    puts [format(addr_format, offset), *row].join(' ')
  end
end

def factorize(n)
  f = []
  d = 2
  while(n > 1)
    q, r = n.divmod(d)
    if r.zero?
      f << d
      n = q
    else
      d += 1
    end
  end
  f
end

def extract_bin(string, filename, start: 0, finish: nil, length: nil)
  finish ||= start + length - 1 if length

  File.binwrite filename, string[start..finish]
end

while (arg = ARGV.shift)
  case arg
  when '-r'
    rom ARGV.shift
  when '-l'
    load ARGV.shift
  when /^-/
    warn "Unknown switch #{arg}"
    exit 1
  else
    warn "Unknown parameter #{arg}"
    exit 1
  end
end

binding.irb # rubocop:disable Lint/Debugger
